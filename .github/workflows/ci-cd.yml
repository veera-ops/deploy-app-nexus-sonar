name: Node.js CI/CD

on:
  push:
    branches:
      - dev
      - qa
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPO_DEV: <your-dev-ecr-repo>
  ECR_REPO_QA: <your-qa-ecr-repo>
  SONAR_PROJECT_KEY: my-node-app
  SONAR_ORG: my-org

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

      - name: Run SonarQube Scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-push-docker:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker Image
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t my-node-app:$IMAGE_TAG .

      - name: Tag & Push to ECR
        run: |
          IMAGE_TAG=$(echo $GITHUB_SHA | cut -c1-7)
          if [[ $GITHUB_REF == 'refs/heads/dev' ]]; then
            REPO=${{ env.ECR_REPO_DEV }}
          elif [[ $GITHUB_REF == 'refs/heads/qa' ]]; then
            REPO=${{ env.ECR_REPO_QA }}
          else
            exit 0
          fi

          docker tag my-node-app:$IMAGE_TAG $REPO:$IMAGE_TAG
          docker push $REPO:$IMAGE_TAG

  publish-artifact:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Tarball
        run: |
          mkdir artifact
          tar -czf artifact/my-node-app.tar.gz *

      - name: Upload to Nexus (Sonatype)
        uses: actions/upload-artifact@v4
        with:
          name: node-app-tarball
          path: artifact/my-node-app.tar.gz
